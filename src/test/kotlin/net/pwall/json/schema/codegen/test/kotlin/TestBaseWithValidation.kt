/*
 * TestBaseWithValidation.kt
 *
 * This code was generated by json-kotlin-schema-codegen - JSON Schema Code Generator
 * See https://github.com/pwall567/json-kotlin-schema-codegen
 *
 * It is not advisable to modify generated code as any modifications will be lost
 * when the generation process is re-run.
 */
package net.pwall.json.schema.codegen.test.kotlin

open class TestBaseWithValidation(
    val type: Type,
    val quantity: Int,
    val name: String
) {

    init {
        require(quantity in -1000..1000) { "quantity not in range -1000..1000 - $quantity" }
        require(name.isNotEmpty()) { "name length < minimum 1 - ${name.length}" }
    }

    override fun equals(other: Any?): Boolean = this === other || other is TestBaseWithValidation &&
            type == other.type &&
            quantity == other.quantity &&
            name == other.name

    override fun hashCode(): Int =
            type.hashCode() xor
            quantity.hashCode() xor
            name.hashCode()

    override fun toString() = "TestBaseWithValidation(type=$type, quantity=$quantity, name=$name)"

    open fun copy(
        type: Type = this.type,
        quantity: Int = this.quantity,
        name: String = this.name
    ) = TestBaseWithValidation(type, quantity, name)

    operator fun component1() = type

    operator fun component2() = quantity

    operator fun component3() = name

    enum class Type {
        FIRST,
        SECOND,
        THIRD
    }

}
