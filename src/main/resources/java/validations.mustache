{{#validations}}{{#type}}{{#EMAIL}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isEmail({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format email - " + {{&javaName}});
{{/EMAIL}}{{#HOSTNAME}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isHostname({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format hostname - " + {{&javaName}});
{{/HOSTNAME}}{{#IPV4}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isIPV4({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format ipv4 - " + {{&javaName}});
{{/IPV4}}{{#IPV6}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isIPV6({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format ipv6 - " + {{&javaName}});
{{/IPV6}}{{#DURATION}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isDuration({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format duration - " + {{&javaName}});
{{/DURATION}}{{#JSON_POINTER}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isJSONPointer({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format json-pointer - " + {{&javaName}});
{{/JSON_POINTER}}{{#RELATIVE_JSON_POINTER}}{{&indent}}        if ({{>nullchk}}!JSONValidation.isRelativeJSONPointer({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} does not match format relative-json-pointer - " + {{&javaName}});
{{/RELATIVE_JSON_POINTER}}{{#PATTERN}}{{&indent}}        if ({{>nullchk}}!{{&value.staticName}}.matcher({{&javaName}}).find())
{{&indent}}            {{>tniae}}("{{&displayName}} does not match pattern " + {{&value.staticName}} + " - " + {{&javaName}});
{{/PATTERN}}{{#MAXIMUM_INT}}{{&indent}}        if ({{&javaName}} > {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} > maximum {{&value}} - " + {{&javaName}});
{{/MAXIMUM_INT}}{{#MAXIMUM_LONG}}{{&indent}}        if ({{&javaName}} > {{&value}}L)
{{&indent}}            {{>tniae}}("{{&displayName}} > maximum {{&value}} - " + {{&javaName}});
{{/MAXIMUM_LONG}}{{#MINIMUM_INT}}{{&indent}}        if ({{&javaName}} < {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} < minimum {{&value}} - " + {{&javaName}});
{{/MINIMUM_INT}}{{#MINIMUM_LONG}}{{&indent}}        if ({{&javaName}} < {{&value}}L)
{{&indent}}            {{>tniae}}("{{&displayName}} < minimum {{&value}} - " + {{&javaName}});
{{/MINIMUM_LONG}}{{#MAXIMUM_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo({{&value.staticName}}) > 0)
{{&indent}}            {{>tniae}}("{{&displayName}} > maximum {{&value.value}} - " + {{&javaName}});
{{/MAXIMUM_DECIMAL}}{{#MAXIMUM_DECIMAL_ZERO}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo(BigDecimal.ZERO) > 0)
{{&indent}}            {{>tniae}}("{{&displayName}} > maximum 0 - " + {{&javaName}});
{{/MAXIMUM_DECIMAL_ZERO}}{{#EXCLUSIVE_MAXIMUM_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo({{&value.staticName}}) >= 0)
{{&indent}}            {{>tniae}}("{{&displayName}} >= exclusive maximum {{&value.value}} - " + {{&javaName}});
{{/EXCLUSIVE_MAXIMUM_DECIMAL}}{{#EXCLUSIVE_MAXIMUM_DECIMAL_ZERO}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo(BigDecimal.ZERO) >= 0)
{{&indent}}            {{>tniae}}("{{&displayName}} >= exclusive maximum 0 - " + {{&javaName}});
{{/EXCLUSIVE_MAXIMUM_DECIMAL_ZERO}}{{#MINIMUM_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo({{&value.staticName}}) < 0)
{{&indent}}            {{>tniae}}("{{&displayName}} < minimum {{&value.value}} - " + {{&javaName}});
{{/MINIMUM_DECIMAL}}{{#MINIMUM_DECIMAL_ZERO}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo(BigDecimal.ZERO) < 0)
{{&indent}}            {{>tniae}}("{{&displayName}} < minimum 0 - " + {{&javaName}});
{{/MINIMUM_DECIMAL_ZERO}}{{#EXCLUSIVE_MINIMUM_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo({{&value.staticName}}) <= 0)
{{&indent}}            {{>tniae}}("{{&displayName}} <= exclusive minimum {{&value.value}} - " + {{&javaName}});
{{/EXCLUSIVE_MINIMUM_DECIMAL}}{{#EXCLUSIVE_MINIMUM_DECIMAL_ZERO}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo(BigDecimal.ZERO) <= 0)
{{&indent}}            {{>tniae}}("{{&displayName}} <= exclusive minimum 0 - " + {{&javaName}});
{{/EXCLUSIVE_MINIMUM_DECIMAL_ZERO}}{{#RANGE_DECIMAL}}{{&indent}}        if ({{#nullable}}{{&javaName}} != null && ({{/nullable}}{{&javaName}}.compareTo({{&value.first.staticName}}) < 0 || {{&javaName}}.compareTo({{&value.second.staticName}}) > 0{{#nullable}}){{/nullable}})
{{&indent}}            {{>tniae}}("{{&displayName}} not in range {{#value}}{{&first.value}}..{{&second.value}}{{/value}} - " + {{&javaName}});
{{/RANGE_DECIMAL}}{{#RANGE_INT}}{{&indent}}        if ({{&javaName}} < {{&value.first}} || {{&javaName}} > {{&value.second}})
{{&indent}}            {{>tniae}}("{{&displayName}} not in range {{#value}}{{&first}}..{{&second}}{{/value}} - " + {{&javaName}});
{{/RANGE_INT}}{{#RANGE_LONG}}{{&indent}}        if ({{&javaName}} < {{&value.first}}L || {{&javaName}} > {{&value.second}}L)
{{&indent}}            {{>tniae}}("{{&displayName}} not in range {{#value}}{{&first}}..{{&second}}{{/value}} - " + {{&javaName}});
{{/RANGE_LONG}}{{#MULTIPLE_INT}}{{&indent}}        if ({{&javaName}} % {{&value}} != 0)
{{&indent}}            {{>tniae}}("{{&displayName}} not a multiple of {{&value}} - " + {{&javaName}});
{{/MULTIPLE_INT}}{{#MULTIPLE_LONG}}{{&indent}}        if ({{&javaName}} % {{&value}}L != 0)
{{&indent}}            {{>tniae}}("{{&displayName}} not a multiple of {{&value}} - " + {{&javaName}});
{{/MULTIPLE_LONG}}{{#MULTIPLE_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.remainder({{&value.staticName}}).compareTo(BigDecimal.ZERO) != 0)
{{&indent}}            {{>tniae}}("{{&displayName}} not a multiple of {{&value.value}} - " + {{&javaName}});
{{/MULTIPLE_DECIMAL}}{{#MAX_ITEMS}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.size() > {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length > maximum {{&value}} - " + {{&javaName}}.size());
{{/MAX_ITEMS}}{{#MIN_ITEMS}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.size() < {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length < minimum {{&value}} - " + {{&javaName}}.size());
{{/MIN_ITEMS}}{{#CONST_ITEMS}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.size() != {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length not constant value {{&value}} - " + {{&javaName}}.size());
{{/CONST_ITEMS}}{{#RANGE_ITEMS}}{{&indent}}        if ({{#nullable}}{{&javaName}} != null && ({{/nullable}}{{&javaName}}.size() < {{&value.first}} || {{&javaName}}.size() > {{&value.second}}{{#nullable}}){{/nullable}})
{{&indent}}            {{>tniae}}("{{&displayName}} length not in range {{#value}}{{&first}}..{{&second}}{{/value}} - " + {{&javaName}}.size());
{{/RANGE_ITEMS}}{{#MAX_LENGTH}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.length() > {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length > maximum {{&value}} - " + {{&javaName}}.length());
{{/MAX_LENGTH}}{{#MIN_LENGTH}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.length() < {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length < minimum {{&value}} - " + {{&javaName}}.length());
{{/MIN_LENGTH}}{{#CONST_LENGTH}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.length() != {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} length != constant {{&value}} - " + {{&javaName}}.length());
{{/CONST_LENGTH}}{{#RANGE_LENGTH}}{{&indent}}        if ({{#nullable}}{{&javaName}} != null && ({{/nullable}}{{&javaName}}.length() < {{&value.first}} || {{&javaName}}.length() > {{&value.second}}{{#nullable}}){{/nullable}})
{{&indent}}            {{>tniae}}("{{&displayName}} length not in range {{#value}}{{&first}}..{{&second}}{{/value}} - " + {{&javaName}}.length());
{{/RANGE_LENGTH}}{{#CONST_STRING}}{{&indent}}        if ({{>nullchk}}!{{&value.staticName}}.equals({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value " + {{&value.staticName}} + " - " + {{&javaName}});
{{/CONST_STRING}}{{#CONST_INT}}{{&indent}}        if ({{&javaName}} != {{&value}})
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value {{&value}} - " + {{&javaName}});
{{/CONST_INT}}{{#CONST_LONG}}{{&indent}}        if ({{&javaName}} != {{&value}}L)
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value {{&value}} - " + {{&javaName}});
{{/CONST_LONG}}{{#CONST_DECIMAL}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo({{&value.staticName}}) != 0)
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value {{&value.value}} - " + {{&javaName}});
{{/CONST_DECIMAL}}{{#CONST_DECIMAL_ZERO}}{{&indent}}        if ({{>nullchk}}{{&javaName}}.compareTo(BigDecimal.ZERO) != 0)
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value 0 - " + {{&javaName}});
{{/CONST_DECIMAL_ZERO}}{{#CONST_ENUM}}{{&indent}}        if ({{>nullchk}}{{&javaName}} != {{&value.javaString}})
{{&indent}}            {{>tniae}}("{{&displayName}} not constant value {{&value.value}} - " + {{&javaName}});
{{/CONST_ENUM}}{{#ENUM_STRING}}{{&indent}}        if ({{>nullchk}}!{{&value.staticName}}.contains({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} not in enumerated values - " + {{&javaName}});
{{/ENUM_STRING}}{{#ENUM_INT}}{{&indent}}        if (!{{&value.staticName}}.contains({{&javaName}}))
{{&indent}}            {{>tniae}}("{{&displayName}} not in enumerated values - " + {{&javaName}});
{{/ENUM_INT}}{{#ARRAY_ITEMS}}{{#nullable}}{{&indent}}        if ({{&javaName}} != null) {
{{#indent.increment}}{{>validations_array}}{{/indent.increment}}{{&indent}}        }
{{/nullable}}{{^nullable}}{{>validations_array}}{{/nullable}}{{/ARRAY_ITEMS}}{{/type}}{{/validations}}